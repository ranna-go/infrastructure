version: "3.3"

services:
  traefik:
    image: "traefik:latest"
    command:
      - "--providers.docker"
      - "--providers.file.directory=/etc/traefik/dynamic_conf"
      - "--entrypoints.http.address=:80"
      - "--entrypoints.https.address=:443"
      - "--providers.docker.exposedByDefault=false"
      - "--certificatesResolvers.le.acme.email=contact@zekro.de"
      - "--certificatesResolvers.le.acme.storage=/etc/certstore/acme.json"
      - "--certificatesResolvers.le.acme.httpChallenge.entryPoint=http"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./traefik/config:/etc/traefik/dynamic_conf"
      - "./traefik/certstore:/etc/certstore"
    restart: "on-failure"

  redis:
    image: "redis:alpine"
    expose:
      - "6379"
    restart: "on-failure"

  gatekeeper:
    image: "ghcr.io/ranna-go/gatekeeper:latest"
    expose:
      - "80"
    environment:
      BASICTOKENPOOL: "generic:*****,shinpuru:*****"
    restart: "on-failure"

  ranna-public:
    image: "ghcr.io/ranna-go/ranna:latest"
    environment:
      RANNA_HOSTROOTDIR: "/var/opt/ranna-public"
      RANNA_SPECFILE: "https://raw.githubusercontent.com/ranna-go/ranna/master/spec/spec.yaml"
      RANNA_SKIPSTARTUPPREP: "true"
      RANNA_API_MAXOUTPUTLEN: "1M"
      RANNA_API_WS_RATELIMIT_LIMITSECONDS: "30"
      RANNA_API_WS_RATELIMIT_BURST: "5"
      RANNA_SANDBOX_RUNTIME: "runsc"
      RANNA_SANDBOX_MEMORY: "150M"
      RANNA_SANDBOX_TIMEOUTSECONDS: "20"
      RANNA_SANDBOX_STREAMBUFFERCAP: "1M"
      RANNA_SCHEDULER_UPDATESPECS: "*/10 * * * *"
      RANNA_SCHEDULER_UPDATEIMAGES: "0 3 * * *"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "/var/opt/ranna-public:/var/opt/ranna-public"
    expose:
      - "8080"
    restart: "on-failure"
    labels:
      traefik.enable: "true"
      traefik.http.routers.ranna-public.entrypoints: "https"
      traefik.http.routers.ranna-public.tls: "true"
      traefik.http.routers.ranna-public.tls.certresolver: "le"
      traefik.http.routers.ranna-public.rule: "Host(`public.ranna.dev`)"
      traefik.http.routers.ranna-public.middlewares: "cors@file"

  kyasshu-public:
    image: "ghcr.io/ranna-go/kyasshu:latest"
    environment:
      RANNA_ENDPOINT: "http://ranna-public:8080"
      REDIS_ENDPOINT: "redis://redis:6379/0"
    expose:
      - "8080"
    labels:
      traefik.enable: "true"
      traefik.http.routers.kyasshu.entrypoints: "https"
      traefik.http.routers.kyasshu.tls: "true"
      traefik.http.routers.kyasshu.rule: "Host(`public.ranna.dev`) && PathPrefix(`/v1/exec`)"
      traefik.http.routers.kyasshu.middlewares: "cors@file,kyasshu-rl"
      traefik.http.middlewares.kyasshu-rl.ratelimit.average: "5"
      traefik.http.middlewares.kyasshu-rl.ratelimit.period: "1m"
      traefik.http.middlewares.kyasshu-rl.ratelimit.burst: "5"

  ranna-private:
    image: "ghcr.io/ranna-go/ranna:latest"
    environment:
      RANNA_HOSTROOTDIR: "/var/opt/ranna-private"
      RANNA_SPECFILE: "https://raw.githubusercontent.com/ranna-go/ranna/master/spec/spec.yaml"
      RANNA_SKIPSTARTUPPREP: "true"
      RANNA_API_MAXOUTPUTLEN: "1M"
      RANNA_SANDBOX_RUNTIME: "runsc"
      RANNA_SANDBOX_MEMORY: "150M"
      RANNA_SANDBOX_TIMEOUTSECONDS: "20"
      RANNA_SANDBOX_STREAMBUFFERCAP: "1M"
      RANNA_SCHEDULER_UPDATESPECS: "*/10 * * * *"
      RANNA_SCHEDULER_UPDATEIMAGES: "0 3 * * *"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "/var/opt/ranna-private:/var/opt/ranna-private"
    expose:
      - "8080"
    restart: "on-failure"
    labels:
      traefik.enable: "true"
      traefik.http.routers.ranna-private.entrypoints: "https"
      traefik.http.routers.ranna-private.tls: "true"
      traefik.http.routers.ranna-private.tls.certresolver: "le"
      traefik.http.routers.ranna-private.rule: "Host(`private.ranna.dev`)"
      traefik.http.routers.ranna-private.middlewares: "ranna-ipwl,ranna-auth"
      traefik.http.middlewares.ranna-ipwl.ipwhitelist.sourcerange: "62.171.147.124"
      traefik.http.middlewares.ranna-auth.forwardauth.address: "http://gatekeeper/auth/basic_token"
